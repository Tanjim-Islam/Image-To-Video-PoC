from utils.logger import log
from services.tts_service import load_script, generate_audio
from services.lipsync_service import run_lipsync
import config
import os

log("Starting video generation process...")

# Validate essential input files first
if not os.path.exists(config.SCRIPT_FILE):
    log(f"CRITICAL Error: Script file {config.SCRIPT_FILE} not found. Aborting.")
    exit()
if not os.path.exists(config.FACE_IMAGE_FILE):
    log(f"CRITICAL Error: Face image {config.FACE_IMAGE_FILE} not found. Aborting.")
    exit()

# Stage 1: TTS
log("Starting TTS processing...")
script_content = load_script(config.SCRIPT_FILE)
log(f"Script loaded: {script_content[:50]}...")
generate_audio(script_content, config.AUDIO_FILE, lang=config.TTS_LANGUAGE)
log(f"Audio generated and saved to {config.AUDIO_FILE} using language: {config.TTS_LANGUAGE}")

# Ensure audio file exists (it should have been created by TTS)
if not os.path.exists(config.AUDIO_FILE):
    log(f"CRITICAL Error: Audio file {config.AUDIO_FILE} was not generated by TTS. Aborting.")
    exit()

# if not os.path.exists(config.FACE_IMAGE_FILE): # This check is now at the top
#     log(f"Error: Face image {config.FACE_IMAGE_FILE} not found. Please ensure it's available.")
#     exit()

# Stage 2: LipSync
log("Starting LipSync processing...")
try:
    run_lipsync(
        image_path=config.FACE_IMAGE_FILE,
        audio_path=config.AUDIO_FILE,
        output_path=config.OUTPUT_VIDEO_FILE,
        wav2lip_model_path=config.WAV2LIP_MODEL_PATH
    )
    log(f"Lipsync completed. Video saved to {config.OUTPUT_VIDEO_FILE}")
except Exception as e:
    log(f"Lipsync process failed: {e}")

log("Video generation process finished.") 